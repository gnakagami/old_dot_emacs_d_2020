; -*- Mode: Emacs-Lisp ; Coding: utf-8 -*-

(let ((ws window-system))
  (cond ((eq ws 'w32) ; Windows
         ;; 言語設定
         ;; (set-language-environment "Japanese")
         (set-language-environment "UTF-8")

         ;; デフォルトの文字コード
         (prefer-coding-system 'utf-8)
         (set-default-coding-systems 'utf-8)
         (set-file-name-coding-system 'utf-8)
         ;(set-file-name-coding-system 'cp932)
         (set-keyboard-coding-system 'cp932)
         (set-terminal-coding-system 'cp932)
         (setq default-process-coding-system '(undecided-dos . utf-8))

         ;; ;; 環境依存文字 文字化け対応
         (set-charset-priority 'ascii 'japanese-jisx0208 'latin-jisx0201
                               'katakana-jisx0201 'iso-8859-1 'cp1252 'unicode)
         (set-coding-system-priority 'utf-8 'euc-jp 'iso-2022-jp 'cp932)

         ;; ファイルごとに文字コードを設定する
         (modify-coding-system-alist 'file "\\.cs\\'"  'sjis)
         (modify-coding-system-alist 'file "\\.ps1\\'" 'sjis)

         ;; フォント設定
         (set-face-attribute 'default nil :family "MyricaM M" :height 120)

         ;; IME設定
         (setq default-input-method "W32-IME")
         ; i-searchしたときquail/KKCが（勝手に起動して）終了しないので終了する
         (global-set-key '[non-convert] 'kkc-cancel)
         ; quail/KKCが起動したとき停止
         (global-set-key "\C-\\" 'quail-inactivate)

         (setq-default w32-ime-mode-line-state-indicator "[--]")
         (setq w32-ime-mode-line-state-indicator-list '("[--]" "[あ]" "[--]"))
         (w32-ime-initialize)

         ;; (setq dired-default-file-coding-system 'utf-8-unix)
         ;; (setq default-file-name-coding-system 'shift_jis) ;dired用

         ;; shell文字化け対策
         ;; (add-hook 'set-language-environment-hook
         ;;           (lambda ()
         ;;             (when (equal "ja_JP.UTF-8" (getenv "LANG"))
         ;;               (setq default-process-coding-system '(utf-8 . utf-8))
         ;;               (setq default-file-name-coding-system 'utf-8))
         ;;             (when (equal "Japanese" current-language-environment)
         ;;               (setq default-buffer-file-coding-system 'iso-2022-jp))))

         )))

;; Cygwinのための設定
(let ((ws window-system))
  (cond ((eq ws 'w32) ; Windows
         ;;;;
         ;;;; cygwin support
         ;;;;
         ;; Sets your shell to use cygwin's bash, if Emacs finds it's running
         ;; under Windows and c:\cygwin exists. Assumes that C:\cygwin\bin is
         ;; not already in your Windows Path (it generally should not be).
         ;;
         (let* ((cygwin-root "/cygdrive/c/home/gnakagami/bin/cygwin")
                ;(cygwin-bin (concat cygwin-root "/bin"))
                ;(cygwin-usr-local-bin (concat cygwin-root "/usr/local/bin"))
                (cygwin-psql-bin "/usr/local/pgsql/bin:/usr/local/pgsql/lib"))
           (when (and (eq 'cygwin system-type) ;(eq 'windows-nt system-type)
                      (file-readable-p cygwin-root))

             (setq exec-path (cons cygwin-psql-bin exec-path))
             (setenv "PATH" (concat ;cygwin-bin ";"
                                    ;ecygwin-usr-local-bin ";"
                                    cygwin-psql-bin ";"
                                    (getenv "PATH")))

             ;; By default use the Windows HOME.
             ;; Otherwise, uncomment below to set a HOME
             ;;      (setenv "HOME" (concat cygwin-root "/home/eric"))
             ;(setenv "HOME" (concat cygwin-root "C:\home\gnakagami\gnuhome"))

             ;; NT-emacs assumes a Windows shell. Change to bash.
             (setq shell-file-name "bash")
             (setenv "SHELL" shell-file-name)
             (setq explicit-shell-file-name shell-file-name)
             ;; This removes unsightly ^M characters that would otherwise
             ;; appear in the output of java applications.
             (add-hook 'comint-output-filter-functions 'comint-strip-ctrl-m)))
         )))
